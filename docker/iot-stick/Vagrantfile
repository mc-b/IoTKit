# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "marcel1691/xubuntu-desktop"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  config.vm.network "forwarded_port", guest:80, host:80, auto_correct: true
  config.vm.network "forwarded_port", guest:3389, host:3389, auto_correct: true
  config.vm.network "forwarded_port", guest:32800, host:32800, auto_correct: false
  config.vm.network "forwarded_port", guest:32600, host:32600, auto_correct: false
  config.vm.network "forwarded_port", guest:33000, host:33000, auto_correct: false
  
  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
     vb.gui = true
     # Video memory
     #vb.customize ["modifyvm", :id, "--vram", "64MB"]
  #
  #   # Customize the amount of memory on the VM:
     vb.memory = "1536"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
  
    # Sources
    cd /home/vagrant
    sudo -u vagrant mkdir ws
    cd ws
    sudo -u vagrant git clone https://github.com/mc-b/IoTKit.git
    
    # install and start Apache & Docker Container  
    cd /home/vagrant/ws/IoTKit/docker
    make install
    make run
    
    # FreeCAD
    sudo add-apt-repository ppa:freecad-maintainers/freecad-stable
    sudo apt-get update
    sudo apt-get install -y freecad
    
    # Yotta (install also gnu-gcc-4-arm)
    sudo apt-get -y install python-setuptools cmake ninja-build python-dev libffi-dev libssl-dev && sudo easy_install pip
    sudo -H pip install yotta
    cd /home/vagrant/ws
    sudo -u vagrant git clone https://github.com/ARMmbed/example-mbedos-blinky.git
    # cd example-mbedos-blinky.git && yotta make target frdm-k64f && cd -
    
    # ARM Crosscompiler
    sudo add-apt-repository ppa:terry.guo/gcc-arm-embedded
    sudo apt-get update
    sudo apt-get install -y gcc-arm-none-eabi=4.9.3.2015q3-1trusty1
    
    # C Umgebung fuer Linux
    sudo apt-get install -y clang-3.5 
     
    # Eclipse, Arduino, Fritzing
    sudo apt-get install -y arduino fritzing
    cd /home/vagrant
    sudo -u vagrant wget http://ftp.fau.de/eclipse/technology/epp/downloads/release/mars/1/eclipse-cpp-mars-1-linux-gtk-x86_64.tar.gz
    sudo -u vagrant tar xvzf eclipse-cpp-mars-1-linux-gtk-x86_64.tar.gz
    rm -f eclipse-cpp-mars-1-linux-gtk-x86_64.tar.gz
    # GCC4ARM Plug-ins
    cd /tmp
    wget http://heanet.dl.sourceforge.net/project/gnuarmeclipse/Current%20Releases/2.x/ilg.gnuarmeclipse.repository-2.11.1-201512141335.zip
    unzip ilg.gnuarmeclipse.repository-2.11.1-201512141335.zip
    sudo -u vagrant cp features/* /home/vagrant/eclipse/features/
    sudo -u vagrant cp plugins/*  /home/vagrant/eclipse/plugins
    # GCC4ARM 
    cd /home/vagrant/ws
    sudo -u vagrant git clone https://github.com/adamgreen/gcc4mbed.git
    export GCC4MBED_DIR=/home/vagrant/ws/gcc4mbed
    export GCC4MBED_TOOLPATH=/usr/bin
    export DEVICES=MCU_K64F 
    cp /vagrant/MCU_K64F-device.mk ${GCC4MBED_DIR}/build
    # cd ${GCC4MBED_DIR} && make    
    cd /home/vagrant
    echo "export GCC4MBED_DIR=/home/vagrant/ws/gcc4mbed" >>.bashrc
    echo "export GCC4MBED_TOOLPATH=/usr/bin" >>.bashrc
    echo "export DEVICES=MCU_K64F" >>.bashrc 
    # Samples
    cd /home/vagrant/ws
    sudo -u vagrant hg clone https://developer.mbed.org/teams/smdiotkitch/code/AnalogIn/
    sudo -u vagrant hg clone https://developer.mbed.org/teams/smdiotkitch/code/DigitalOut/
    
    # Desktop Icons
    cd /home/vagrant
    sudo -u vagrant cp /vagrant/Desktop/*.desktop Schreibtisch/
    
  SHELL
end
